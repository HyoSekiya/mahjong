@startuml
package api {
    class Api {
        Service
        Request
        Response
        利用者のリクエストを牌に変換するくん
        invoke(List<牌>) : Response
    }
    class Response {
        response : Map<String,String>
        和了役をリストで返す : List<Map<String,String>>
    }
    Api .> Request
    Api .> Response

    class Request {
        1つ目 : String
        2つ目 : String
        3つ目 : String
        4つ目 : String
        5つ目 : String
        6つ目 : String
        7つ目 : String
        8つ目 : String
        9つ目 : String
        10つ目 : String
        11つ目 : String
        12つ目 : String
        13つ目 : String
        14つ目 : String
        リクエストを作成(List<String>) : List<String>
    }
}
package service{
    class Service{
        並べるくん
        役の判定くん
        + 和了点数を返す(List<牌>) : 和了内容
    }
}

Api ..> Service
package domain {
    package 和了点数 {
        class 和了点数計算くん{
            和了内容
            和了点数を計算(List<牌>) : 和了内容
        }
        enum 点数表{}
        class 和了点数 {
            和了点数 : int
        }
        class 和了内容{
            List<牌>
            List<和了役>
            合計符
            和了点数
            和了内容を生成() : 和了内容
        }
        和了点数計算くん ..> 点数表
        和了点数計算くん ..> 和了点数
        和了点数計算くん ..> 和了内容
    }

    package 符 {
        class 合計符 {
            合計符 : int
        }

        package 符の判定{
            class 合計符計算くん{
                基本符
                和了方
                面子
                省頭
                待の形の種類
                合計符計算(List<牌>) : 合計符
            }
            class 基本符の判定{}
            class 和了の判定{}
            class 面子の判定{}
            class 省頭の判定{}
            class 待の形の種類の判定{}
        }

        package 符種類 {
            enum 基本符{}
            enum 和了方{}
            enum 面子{}
            enum 省頭{}
            enum 待の形の種類{}
        }

        合計符計算くん ..> 合計符
        合計符計算くん ..> 符種類
        合計符計算くん ..> 基本符の判定
        合計符計算くん ..> 和了の判定
        合計符計算くん ..> 面子の判定
        合計符計算くん ..> 省頭の判定
        合計符計算くん ..> 待の形の種類の判定
    }

    package 牌 {
        interface 牌interface
        class 並べるくん {
            並べたリスト : List<牌>
            牌の種類ごとに並べる(List<牌>) : List<牌>
        }
        class 利用者のリクエストを牌に変換するくん {
            リクエストコードのチェック(List<String>)) : boolean
            リクエストを牌に変換(List<Request>) : List<牌>
            牌に変換(String) : 牌
        }
        package 数牌 {

            enum 索子 {
                1索子
                2索子
                3索子
                4索子
                5索子
                6索子
                7索子
                8索子
                9索子
                牌の種類() : String
                牌の名前() : String
                牌のリクエストコード() : String
                {static} + 索子か(String) : boolean
                {static} + 索子のうちどれか(String) : 索子
                {static} + 19字牌か(牌) : boolean
            }

            enum 萬子 {
                1萬子
                2萬子
                3萬子
                4萬子
                5萬子
                6萬子
                7萬子
                8萬子
                9萬子
                牌の種類() : String
                牌の名前() : String
                牌のリクエストコード() : String
                {static} + 萬子か(String) : boolean
                {static} + 萬子のうちどれか(String) : 萬子
                {static} + 19字牌か(牌) : boolean

            }

            enum 筒子 {
                1筒子
                2筒子
                3筒子
                4筒子
                5筒子
                6筒子
                7筒子
                8筒子
                9筒子
                牌の種類() : String
                牌の名前() : String
                牌のリクエストコード() : String
                {static} + 萬子か(String) : boolean
                {static} + 萬子のうちどれか(String) : 萬子
                {static} + 19字牌か(牌) : boolean

            }
        }

        package 字牌 {

            enum 三元牌 {
                白
                發
                中
                牌の種類() : String
                牌の名前() : String
                牌のリクエストコード() : String
                {static} + 三元牌か(String) : boolean
                {static} + 三元牌のうちどれか(String) : 三元牌
            }

            enum 風牌 {
                東
                南
                西
                北
                牌の種類() : String
                牌の名前() : String
                牌のリクエストコード() : String
                {static} + 風牌か(String) : boolean
                {static} + 風牌のうちどれか(String) : 風牌
            }
        }
        索子 --|> 牌interface
        萬子 --|> 牌interface
        筒子 --|> 牌interface
        三元牌 --|> 牌interface
        風牌 --|> 牌interface
        並べるくん ..> 牌interface
        利用者のリクエストを牌に変換するくん ..> 牌interface
    }

    package 役 {
        class 和了役 {
            役の名前 : String
            役の飜数 : String
        }
        class 和了役判定くん {
            順子
            刻子
            役満の判定
            1飜の判定
            2飜の判定
            3飜の判定
            5飜の判定
            6飜の判定
            和了役を返す(List<牌>) : List<和了役>
        }
        和了役判定くん .> 和了役
        和了役判定くん ..> 役の判定

        package 役の判定 {
            class 1飜の判定 {
                is門前清自摸和():boolean
                is立直(List<牌>):boolean
                is一発(List<牌>):boolean
                is役牌(List<牌>):boolean
                is平和(List<牌>):boolean
                is断么九(List<牌>):boolean
                is一盃口(List<牌>):boolean
                is海底摸月(List<牌>):boolean
                is河底撈魚(List<牌>):boolean
                is搶槓(List<牌>):boolean
                is嶺上開花(List<牌>):boolean
                is三色同順_鳴き(List<牌>):boolean
                is一気通貫_鳴き(List<牌>):boolean
                is全帯么九_鳴き(List<牌>):boolean
            }
            class 2飜の判定{
                isダブル立直(List<牌>):boolean
                is連風牌(List<牌>):boolean
                is対々和(List<牌>):boolean
                is三暗刻(List<牌>):boolean
                is三色同刻(List<牌>):boolean
                is三色同順(List<牌>):boolean
                is三槓子(List<牌>):boolean
                is小三元(List<牌>):boolean
                is混老頭(List<牌>):boolean
                is一気通貫(List<牌>):boolean
                is全帯么九(List<牌>):boolean
                is七対子(List<牌>):boolean
                is純全帯么九_鳴き(List<牌>):boolean
            }
            class 3飜の判定{
                is二盃口(List<牌>):boolean
                is混一色(List<牌>):boolean
                is純全帯么九(List<牌>):boolean
            }
            class 5飜の判定{
                is清一色_鳴き(List<牌>):boolean
            }
            class 6飜の判定{
                is清一色(List<牌>):boolean
            }
            class 役満の判定{
                is天和(List<牌>):boolean
                is地和(List<牌>):boolean
                is国士無双(List<牌>):boolean
                is四暗刻(List<牌>):boolean
                is大三元(List<牌>):boolean
                is緑一色(List<牌>):boolean
                is字一色(List<牌>):boolean
                is小四喜(List<牌>):boolean
                is大四喜(List<牌>):boolean
                is清老頭(List<牌>):boolean
                is四槓子(List<牌>):boolean
                is九蓮宝燈(List<牌>):boolean
            }
        }
        package 役一覧{
            enum 1飜 {
                門前清自摸和
                立直
                一発
                役牌
                平和
                断么九
                一盃口
                海底摸月
                河底撈魚
                搶槓
                嶺上開花
                三色同順_鳴き
                一気通貫_鳴き
                全帯么九_鳴き
                役名() : String
                飜数() : int
                飜数() : String
            }
            enum 2飜 {
                ダブル立直
                連風牌
                対々和
                三暗刻
                三色同刻
                三色同順
                三槓子
                小三元
                混老頭
                一気通貫
                全帯么九
                七対子
                純全帯么九_鳴き
                役名() : String
                飜数() : int
                飜数() : String
            }
            enum 3飜 {
                二盃口
                混一色
                純全帯么九
                役名() : String
                飜数() : int
                飜数() : String
            }
            enum 5飜 {
                清一色_鳴き
                役名() : String
                飜数() : int
                飜数() : String
            }
            enum 6飜 {
                清一色
                役名() : String
                飜数() : int
                飜数() : String
            }
            enum 役満 {
                天和
                地和
                国士無双
                四暗刻
                大三元
                緑一色
                字一色
                小四喜
                大四喜
                清老頭
                四槓子
                九蓮宝燈
                役名() : String
                飜数() : int
                飜数() : String
            }
        }
        和了役判定くん ..> 役一覧
    }

    package 面子 {
        class 面子判定くん{
            is33332(List<牌>):boolean
        }
        enum 順子{
            {static} どの順子が含まれているか(List<牌>):List<順子>
        }
        enum 刻子{
            {static} どの刻子が含まれているか(List<牌>):List<刻子>
        }
        enum 対子{
            {static} どの対子が含まれているか(List<牌>):List<対子>
        }

        面子判定くん..>順子
        面子判定くん..>刻子
        面子判定くん..>対子
    }
    和了点数計算くん .> 合計符計算くん
    和了点数計算くん .> 和了役判定くん
    和了点数計算くん .> 牌interface
    面子 ..> 牌
    符 ...> 面子
    符 ...> 牌
    役 ..> 牌
    役 ..> 面子
}
Api ..> 利用者のリクエストを牌に変換するくん
Service ..> 和了点数計算くん
Service ..> 並べるくん

@enduml
