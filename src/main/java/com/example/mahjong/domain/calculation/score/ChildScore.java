package com.example.mahjong.domain.calculation.score;

import lombok.AllArgsConstructor;
import lombok.Getter;

/**
 * 個の点数一覧
 */
@AllArgsConstructor
@Getter
public enum ChildScore implements Score {
    // 一飜
    一飜_30符(300, 500, 1000, "一飜_30符"),
    一飜_40符(400, 700, 1300, "一飜_40符"),
    一飜_50符(400, 800, 1600, "一飜_50符"),
    一飜_60符(500, 1000, 2000, "一飜_60符"),
    一飜_70符(600, 1200, 2300, "一飜_70符"),

    // 二飜
    二飜_20符(400, 700, 1300, "二飜_20符"),
    二飜_30符(500, 1000, 2000, "二飜_30符"),
    二飜_40符(700, 1300, 2600, "二飜_40符"),
    二飜_50符(800, 1600, 3200, "二飜_50符"),
    二飜_60符(1000, 2000, 3900, "二飜_60符"),
    二飜_70符(1200, 2300, 4500, "二飜_70符"),

    // 三飜
    三飜_20符(700, 1300, 2600, "三飜_20符"),
    三飜_30符(1000, 2000, 3900, "三飜_30符"),
    三飜_40符(1300, 2600, 5200, "三飜_40符"),
    三飜_50符(1600, 3200, 6400, "三飜_50符"),
    三飜_60符(2000, 3900, 7700, "三飜_60符"),

    // 四飜
    四飜_20符(1300, 2600, 5200, "四飜_20符"),
    四飜_30符(2000, 3900, 7700, "四飜_30符"),
    四飜_40符(2600, 5200, 8000, "四飜_40符"), // 満貫扱い
    四飜_50符(3200, 6400, 8000, "四飜_50符"), // 満貫扱い
    四飜_60符(3900, 7700, 8000, "四飜_60符"), // 満貫扱い

    // 五飜 (満貫)
    満貫(2000, 4000, 8000, "満貫"),

    // 六飜から七飜 (跳満)
    跳満(3000, 6000, 12000, "跳満"),

    // 八飜から十飜 (倍満)
    倍満(4000, 8000, 16000, "倍満"),

    // 十一飜から十二飜 (三倍満)
    三倍満(6000, 12000, 24000, "三倍満"),

    // 十三飜以上 (役満)
    役満(8000, 16000, 32000, "役満");

    // ツモ和了点数 (子)
    private final int ツモ子点数;

    // ツモ和了点数 (親)
    private final int ツモ親点数;

    // ロン和了点数 (親子共通)
    private final int ロン点数;

    // 名前
    private final String name;

    public int getツモ子点数() {
        return ツモ子点数;
    }

    public int getツモ親点数() {
        return ツモ親点数;
    }

    public int getロン点数() {
        return ロン点数;
    }

    public String getName() {
        return name;
    }

    @Override
    public boolean is子() {
        return true;
    }

    @Override
    public boolean is親() {
        return false;
    }
}